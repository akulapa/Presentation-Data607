y<-getNodeSet(x,"//tbody//td")
y
z <- data.frame(y, stringsAsFactors = F)
y<-getNodeSet(x,"//tbody")
y
z <- getNodeSet(y, "//td")
y -> htmlTreeParse(y, useInternalNodes = T)
x<-htmlTreeParse(jan09, useInternalNodes = T)
y<-getNodeSet(x,"//td")
y
z <- sapply(y, xmlValue)
z
rm(list = ls())
l
x = htmlParse('https://www.rita.dot.gov/bts/sites/rita.dot.gov.bts/files/subject_areas/omnibus_surveys/targeted_survey/survey_on_faa_sponsored_safety_seminars/principal_findings_2003/index.html')
jan09 <- getURL("https://www.rita.dot.gov/bts/sites/rita.dot.gov.bts/files/subject_areas/omnibus_surveys/targeted_survey/survey_on_faa_sponsored_safety_seminars/principal_findings_2003/index.html", ssl.verifypeer = FALSE)
x<-htmlTreeParse(jan09, useInternalNodes = T)
y<-getNodeSet(x,"//td")
z <- sapply(y, xmlValue)
y -> htmlTreeParse(y, useInternalNodes = T)
y
z
pattern="\n\t\t\t\t "
z<- gsub(pattern,"",z)
z
pattern="\\n\\t\\t\\t\\t"
z<- gsub(pattern,"",z)
z
pattern="\\t"
z<- gsub(pattern,"",z)
pattern="\\n"
z<- gsub(pattern,"",z)
z
z<-z[z != ""]
z<-z[z != " "]
z
z<-z[z != " "]
z
z
y
src = xpathApply(y, "//a[@href]", xmlGetAttr, "href")
src = xpathApply(getNodeSet(x,"//td"), "//a[@href]", xmlGetAttr, "href")
src = xpathApply(x, "//a[@href]", xmlGetAttr, "href")
src
src
z <- sapply(y, xmlValue)
y
y<-getNodeSet(x,"//td")
y
y
y[1]
xpathApply(y[1], "//img[@alt]", xmlGetAttr, "alt")
xpathApply(y, "//img[@alt]", xmlGetAttr, "alt")
xpathApply(x, "//img[@alt]", xmlGetAttr, "alt")
xpathApply(x, "//img[@alt]", xmlGetAttr, "alt")
node <- xmlNode("foo", attrs=c(a="1", b="my name"))
node
xmlAttrs(x, TRUE, TRUE)
xmlAttrs(y, TRUE, TRUE)
y[1]
y[20]
xmlValue(y[20])
xmlValue(xmlNode(y[20]))
xmlValue(xmlNode(y[20]))
tt =
'<x>
<a>text</a>
<b foo="1"/>
<c bar="me">
<d>a phrase</d>
</c>
</x>'
doc = xmlParse(tt)
xmlToList(doc)
tt =
'<x>
<a>text</a>
<b foo="1"/>
<c bar="me">
<d>a phrase</d>
</c>
</x>
<x>
<a>text2</a>
<b foo="2"/>
<c bar="you">
<d>some phrase</d>
<e>some text</e>
</c>
</x>
'
doc = xmlParse(tt)
xmlToList(doc)
xmlToList(doc)
doc
tt =
'<x>
<a>text</a>
<b foo="1"/>
<c bar="me">
<d>a phrase</d>
</c>
</x>
<x>
<a>text2</a>
<b foo="2"/>
<c bar="you">
<d>some phrase</d>
<e>some text</e>
</c>
</x>
'
tt
doc = xmlParse(tt)
tt =
'<y><x>
<a>text</a>
<b foo="1"/>
<c bar="me">
<d>a phrase</d>
</c>
</x>
<x>
<a>text2</a>
<b foo="2"/>
<c bar="you">
<d>some phrase</d>
<e>some text</e>
</c>
</x>
</y>
'
doc = xmlParse(tt)
xmlToList(doc)
doc = xmlTreeParse(tt)
xmlToList(doc)
z<-xmlToList(doc)
z$x
z$x[1]
doc = xmlTreeParse(tt)
doc
doc
xmlToList(doc)
library(rvest)
jan09 <- getURL("https://www.rita.dot.gov/bts/sites/rita.dot.gov.bts/files/subject_areas/omnibus_surveys/targeted_survey/survey_on_faa_sponsored_safety_seminars/principal_findings_2003/index.html", ssl.verifypeer = FALSE)
jan06 %>%
html_nodes() %>%
html_text()
x<-htmlTreeParse(jan09, useInternalNodes = T)
x %>%
html_nodes() %>%
html_text()
jan09 <- html("https://www.rita.dot.gov/bts/sites/rita.dot.gov.bts/files/subject_areas/omnibus_surveys/targeted_survey/survey_on_faa_sponsored_safety_seminars/principal_findings_2003/index.html")
jan09 <- read_html("https://www.rita.dot.gov/bts/sites/rita.dot.gov.bts/files/subject_areas/omnibus_surveys/targeted_survey/survey_on_faa_sponsored_safety_seminars/principal_findings_2003/index.html")
jan09 %>%
html_nodes() %>%
html_text()
jan09 %>%
html_nodes("td") %>%
html_text()
jan09 %>%
html_nodes("td") %>%
html_attrs()
jan09 %>%
html_nodes("td") %>%
html_nodes("a") %>%
html_attrs()
rm(list = ls())
nyc.xml.raw.data <- read_html("https://data.cityofnewyork.us/api/views/tyjc-nqc2/rows.xml")
library(knitr)
library(dplyr)
library(rvest)
library(stringr)
nyc.xml.raw.data <- read_html("https://data.cityofnewyork.us/api/views/tyjc-nqc2/rows.xml")
nyc.xml.nodes <- nyc.xml.raw.data %>%
html_nodes("row")
nyc.xml.nodes[1] %>% html_text()
nyc.xml.nodes[1]
nyc.xml.nodes[1] %>% html_text()
aaa1 <- nyc.xml.nodes[1]
aaa1
aaa1 %>% html_text()
aaa1 <- nyc.xml.nodes[2]
aaa1 %>% html_text()
aaa1
aaa1 <- nyc.xml.nodes[1]
aaa1
aaa1 %>% html_text()
nyc.xml.nodes <- nyc.xml.raw.data %>%
html_nodes(xpath = "//row//row")
aaa1 <- nyc.xml.nodes[1]
aaa1 %>% html_text()
aaa1 %>% html_text()
column <- function(n,x) {
df <- data.frame(n %>% html_nodes(xpath = x) %>% html_text(), stringsAsFactors = F)
return(df)
}
nyc.xml.nodes
nyc.xml.data.frame <- data.frame(
column(nyc.xml.nodes, "//dataset"))
View(nyc.xml.data.frame)
nyc.xml.data.frame <- data.frame(
column(nyc.xml.nodes, "//link"))
View(nyc.xml.data.frame)
aaa1 <- nyc.xml.nodes[1]
aaa1
aaa1 %>% html_text()
column <- function(n) {
aaa <- n %>% html_text()
url_pattern <- "http[s]?://(?:[a-zA-Z]|[0-9]|[$-_@.&+]|[!*\\(\\),]|(?:%[0-9a-fA-F][0-9a-fA-F]))+"
bbb <- str_extract(aaa, url_pattern)
return(bbb)
}
aaa1
column1 <- function(n) {
aaa <- n %>% html_text()
url_pattern <- "http[s]?://(?:[a-zA-Z]|[0-9]|[$-_@.&+]|[!*\\(\\),]|(?:%[0-9a-fA-F][0-9a-fA-F]))+"
bbb <- str_extract(aaa, url_pattern)
return(bbb)
}
column1(aaa1)
column1 <- function(n) {
ccc<-html_attr(n, "_id")
aaa <- n %>% html_text()
url_pattern <- "http[s]?://(?:[a-zA-Z]|[0-9]|[$-_@.&+]|[!*\\(\\),]|(?:%[0-9a-fA-F][0-9a-fA-F]))+"
bbb <- str_extract(aaa, url_pattern)
return(c(ccc,bbb))
}
column1(aaa1)
column <- function(n,x) {
df <- data.frame(n %>% html_nodes(xpath = x) %>% html_text(), n %>% html_nodes(xpath = x) %>% html_attr("_id"), stringsAsFactors = F)
return(df)
}
nyc.xml.data.frame <- data.frame(
column(nyc.xml.nodes, "//dataset"))
View(nyc.xml.data.frame)
column <- function(n,x) {
df <- data.frame(n %>% html_nodes(xpath = x) %>% html_text(), n %>% html_nodes(xpath = x) %>% html_attrs("_id"), stringsAsFactors = F)
return(df)
}
column <- function(n,x) {
df <- data.frame(n %>% html_nodes(xpath = x) %>% html_text(), n %>% html_attrs("_id"), stringsAsFactors = F)
return(df)
}
nyc.xml.data.frame <- data.frame(
column(nyc.xml.nodes, "//dataset"))
View(nyc.xml.data.frame)
nyc.xml.data.frame <- data.frame(
column(nyc.xml.nodes, "//dataset"))
nyc.xml.data.frame <- data.frame(
column(nyc.xml.nodes, html_nodes(xpath = //dataset) %>% html_text()))
nyc.xml.data.frame <- data.frame(
column(nyc.xml.nodes, html_nodes(xpath = "//dataset") %>% html_text()))
nyc.xml.data.frame <- data.frame(
column(nyc.xml.nodes %>%  html_nodes(xpath = "//dataset") %>% html_text()))
nyc.xml.data.frame <- data.frame(
nyc.xml.nodes %>%  html_nodes(xpath = "//dataset") %>% html_text())
View(nyc.xml.data.frame)
nyc.xml.data.frame <- data.frame(
nyc.xml.nodes %>%  html_nodes(xpath = "//dataset") %>% html_text(),
nyc.xml.nodes %>% html_attrs("_id"),
stringsAsFactors = F
)
nyc.xml.data.frame <- data.frame(
nyc.xml.nodes %>%  html_nodes(xpath = "//dataset") %>% html_text(),
cid = nyc.xml.nodes %>% html_attrs("_id"),
stringsAsFactors = F
)
nyc.xml.data.frame <- data.frame(
nyc.xml.nodes %>%  html_nodes(xpath = "//dataset") %>% html_text(),
cid = nyc.xml.nodes %>% html_attr("_id"),
stringsAsFactors = F
)
nyc.xml.data.frame <- data.frame(
nyc.xml.nodes %>%  html_nodes(xpath = "//dataset") %>% html_text(),
nyc.xml.nodes %>%  html_nodes(xpath = "//link") %>% html_text(),
cid = nyc.xml.nodes %>% html_attr("_id"),
stringsAsFactors = F
)
nyc.xml.data.frame <- data.frame(
agency = nyc.xml.nodes %>%  html_nodes(xpath = "//agency") %>% html_text(),
dataset = nyc.xml.nodes %>%  html_nodes(xpath = "//dataset") %>% html_text(),
dataset_description = nyc.xml.nodes %>%  html_nodes(xpath = "//dataset_description") %>% html_text(),
update_frequency = nyc.xml.nodes %>%  html_nodes(xpath = "//update_frequency") %>% html_text(),
planned_release_date = nyc.xml.nodes %>%  html_nodes(xpath = "//planned_release_date") %>% html_text(),
cid = nyc.xml.nodes %>% html_attr("_id"),
stringsAsFactors = F
)
View(nyc.xml.data.frame)
for (i in 1:length(nyc.xml.nodes)){
n <- nyc.xml.nodes[i]
nodeId <-html_attr(nyc.xml.nodes[i], "_id")
allText <- nyc.xml.nodes[i] %>% html_text()
url_pattern <- "http[s]?://(?:[a-zA-Z]|[0-9]|[$-_@.&+]|[!*\\(\\),]|(?:%[0-9a-fA-F][0-9a-fA-F]))+"
urlLink <- str_extract(allText, url_pattern)
nyc.xml.url.frame <- rbind(nyc.xml.url.frame, c(nodeId,urlLink))
}
nyc.xml.url.frame <- data.frame(cid = NA, urlLink = NA)
View(nyc.xml.url.frame)
for (i in 1:length(nyc.xml.nodes)){
n <- nyc.xml.nodes[i]
nodeId <-html_attr(nyc.xml.nodes[i], "_id")
allText <- nyc.xml.nodes[i] %>% html_text()
url_pattern <- "http[s]?://(?:[a-zA-Z]|[0-9]|[$-_@.&+]|[!*\\(\\),]|(?:%[0-9a-fA-F][0-9a-fA-F]))+"
urlLink <- str_extract(allText, url_pattern)
nyc.xml.url.frame <- rbind(nyc.xml.url.frame, c(nodeId,urlLink))
}
View(nyc.xml.url.frame)
nyc.xml.url.frame <- data.frame(cid = NA, urlLink = NA)
for (i in 1:length(nyc.xml.nodes)){
nodeId <-html_attr(nyc.xml.nodes[i], "_id")
allText <- nyc.xml.nodes[i] %>% html_text()
url_pattern <- "http[s]?://(?:[a-zA-Z]|[0-9]|[$-_@.&+]|[!*\\(\\),]|(?:%[0-9a-fA-F][0-9a-fA-F]))+"
dataSetUrl <- str_extract(allText, url_pattern)
nyc.xml.url.frame <- rbind(nyc.xml.url.frame, c(nodeId,dataSetUrl))
}
View(nyc.xml.url.frame)
nyc.xml.complete.data <- nyc.xml.data.frame %>%
inner_join(nyc.xml.url.frame, by = "cid")
View(nyc.xml.complete.data)
nyc.xml.complete.data <- nyc.xml.data.frame %>%
inner_join(nyc.xml.url.frame, by = "cid") %>%
arrange(cid)
View(nyc.xml.complete.data)
nyc.xml.data.frame <- data.frame(
agency = nyc.xml.nodes %>%  html_nodes(xpath = "//agency") %>% html_text(),
dataset = nyc.xml.nodes %>%  html_nodes(xpath = "//dataset") %>% html_text(),
dataset_description = nyc.xml.nodes %>%  html_nodes(xpath = "//dataset_description") %>% html_text(),
update_frequency = nyc.xml.nodes %>%  html_nodes(xpath = "//update_frequency") %>% html_text(),
planned_release_date = nyc.xml.nodes %>%  html_nodes(xpath = "//planned_release_date") %>% html_text(),
cid = nyc.xml.nodes %>% html_attr("_id") %>% as.integer(),
stringsAsFactors = F
)
nyc.xml.url.frame <- data.frame(cid = NA, urlLink = NA)
for (i in 1:length(nyc.xml.nodes)){
nodeId <-html_attr(nyc.xml.nodes[i], "_id") %>% as.integer()
allText <- nyc.xml.nodes[i] %>% html_text()
url_pattern <- "http[s]?://(?:[a-zA-Z]|[0-9]|[$-_@.&+]|[!*\\(\\),]|(?:%[0-9a-fA-F][0-9a-fA-F]))+"
dataSetUrl <- str_extract(allText, url_pattern)
nyc.xml.url.frame <- rbind(nyc.xml.url.frame, c(nodeId,dataSetUrl))
}
nyc.xml.complete.data <- nyc.xml.data.frame %>%
inner_join(nyc.xml.url.frame, by = "cid") %>%
arrange(cid)
nyc.xml.url.frame %>% filter(!is.na(cid))
nyc.xml.url.frame %>% filter(!is.na(cid)) %>% select()
nyc.xml.url.frame <- nyc.xml.url.frame %>% filter(!is.na(cid)) %>% select()
View(nyc.xml.url.frame)
nyc.xml.url.frame <- nyc.xml.url.frame %>% filter(!is.na(cid)) %>% select(cid,urlLink)
nyc.xml.url.frame <- rbind(nyc.xml.url.frame, c(nodeId,dataSetUrl))
nyc.xml.url.frame <- data.frame(cid = NA, urlLink = NA)
for (i in 1:length(nyc.xml.nodes)){
nodeId <-html_attr(nyc.xml.nodes[i], "_id") %>% as.integer()
allText <- nyc.xml.nodes[i] %>% html_text()
url_pattern <- "http[s]?://(?:[a-zA-Z]|[0-9]|[$-_@.&+]|[!*\\(\\),]|(?:%[0-9a-fA-F][0-9a-fA-F]))+"
dataSetUrl <- str_extract(allText, url_pattern)
nyc.xml.url.frame <- rbind(nyc.xml.url.frame, c(nodeId,dataSetUrl))
}
nyc.xml.url.frame <- nyc.xml.url.frame %>% filter(!is.na(cid)) %>% select(cid,urlLink)
View(nyc.xml.url.frame)
nyc.xml.url.frame$cid <- as.numeric(nyc.xml.url.frame$cid)
View(nyc.xml.url.frame)
nyc.xml.url.frame <- data.frame(cid = NA, urlLink = NA)
for (i in 1:length(nyc.xml.nodes)){
nodeId <-html_attr(nyc.xml.nodes[i], "_id") %>% as.integer()
allText <- nyc.xml.nodes[i] %>% html_text()
url_pattern <- "http[s]?://(?:[a-zA-Z]|[0-9]|[$-_@.&+]|[!*\\(\\),]|(?:%[0-9a-fA-F][0-9a-fA-F]))+"
dataSetUrl <- str_extract(allText, url_pattern)
nyc.xml.url.frame <- rbind(nyc.xml.url.frame, c(nodeId,dataSetUrl))
}
nyc.xml.url.frame <- nyc.xml.url.frame %>% filter(!is.na(cid)) %>% select(cid,urlLink)
nyc.xml.url.frame$cid <- as.numeric(nyc.xml.url.frame$cid)
nyc.xml.complete.data <- nyc.xml.data.frame %>%
inner_join(nyc.xml.url.frame, by = "cid") %>%
arrange(cid)
View(nyc.xml.url.frame)
View(nyc.xml.complete.data)
nyc.html.data.frame
#Read data from website
nyc.html.raw.data <- read_html("https://data.cityofnewyork.us/api/views/tyjc-nqc2/rows.html")
#In case file is downloaded and saved to local drive. It can also be read from local drive same was it is read from website.
#nyc.html.raw.data <- read_html(paste(getwd(),"//rows.html",sep=""))
#Extract nodes information
nyc.html.nodes <- nyc.html.raw.data %>%
html_nodes("tr")
#Extract data from each node
nyc.html.text <- nyc.html.nodes %>%
html_text()
#Data needs some tidying as it contains (\n) characters. Replace (\n) with pipe delimited.
nyc.html.text <- gsub(pattern = "\\n", replacement = "|", nyc.html.text)
#First row is column heading. Remove the row
nyc.html.text <- nyc.html.text[2:length(nyc.html.text)]
#Convert dataset into data frame
nyc.html.data.frame <- data.frame(unlist(str_split_fixed(nyc.html.text, "\\|", 7)), stringsAsFactors = F)
#Remove unused columns
nyc.html.data.frame$X7 <- NULL
#Rename the columns names accordingly
nyc.html.data.frame <- rename(nyc.html.data.frame, agency = X1, dataset = X2, dataset_description = X3, update_frequency = X4, planned_release_date = X5, urlLink = X6)
nyc.html.data.frame <- nyc.html.data.frame %>% mutate(cid = row_number())
nyc.html.data.frame %>% filter(cid < 16) %>% select(cid, agency, dataset, dataset_description, update_frequency, planned_release_date, urlLink) %>%
kable(nyc.html.data.frame, format="pandoc", align="l")
nyc.html.data.frame %>% filter(cid < 16) %>% select(cid, agency, dataset, dataset_description, update_frequency, planned_release_date, urlLink) %>%
kable(format="pandoc")
nyc.xml.complete.data %>% filter(cid < 21) %>% select(cid, agency, dataset, dataset_description, update_frequency, planned_release_date, urlLink) %>%
kable(format="pandoc")
nyc.json.raw.data <- fromJSON("https://data.cityofnewyork.us/api/views/tyjc-nqc2/rows.json", flatten = T)
library(knitr)
library(dplyr)
library(rvest)
library(stringr)
library(jsonlite)
library(tibble)
nyc.json.raw.data <- fromJSON("https://data.cityofnewyork.us/api/views/tyjc-nqc2/rows.json", flatten = T)
nyc.json.data.frame <- nyc.json.raw.data[['data']]
View(nyc.json.data.frame)
nyc.json.data.frame <- nyc.json.data.frame %>% select(cid = row_number(), agency = V9, dataset = V10, dataset_description = V11, update_frequency = V12, planned_release_date = V13, urlLink = V14)
nyc.json.data.frame %>% select(cid = row_number(), V9 = agency)
nyc.json.data.frame %>% select(row_number(), V9)
nyc.json.data.frame %>% select( V9)
View(nyc.json.data.frame)
nyc.json.data.frame <- data.frame(nyc.json.raw.data[['data']])
View(nyc.json.data.frame)
nyc.json.data.frame %>% select(agency = X9 dataset = X10)
nyc.json.data.frame %>% select(agency = X9, dataset = X10)
nyc.json.data.frame <- nyc.json.data.frame %>% select(cid = X3, agency = X9, dataset = X10, dataset_description = X11, update_frequency = X12, planned_release_date = X13, urlLink = X14)
nyc.json.data.frame$cid <- as.numeric(nyc.json.data.frame$cid)
nyc.json.data.frame <- nyc.json.data.frame %>% arrange(cid)
nyc.json.data.frame %>% filter(cid < 16) %>% select(cid, agency, dataset, dataset_description, update_frequency, planned_release_date, urlLink) %>%
kable(format="pandoc")
nyc.json.meta.frame <- data.frame(nyc.json.raw.data[['meta']])
nyc.json.meta.frame <- nyc.json.raw.data[['meta']]
meta_data$view$columns
nyc.json.meta.data <- nyc.json.raw.data[['meta']]
nyc.json.meta.data$view$columns
kable(nyc.json.meta.data$view$columns, format="pandoc")
View(nyc.json.data.frame)
nyc.json.data.frame <- data.frame(nyc.json.raw.data[['data']])
nyc.json.data.frame <- nyc.json.data.frame %>% select(cid = X3, agency = X9, dataset = X10, dataset_description = X11, update_frequency = X12, planned_release_date = X13, urlLink = X14)
nyc.json.data.frame$cid <- as.numeric(nyc.json.data.frame$cid)
nyc.json.data.frame <- nyc.json.data.frame %>% arrange(cid)
nyc.json.data.frame <- nyc.json.data.frame %>% select(cid = X3, agency = X9, dataset = X10, dataset_description = X11, update_frequency = X12, planned_release_date = X13, urlLink = X14)
nyc.json.data.frame <- data.frame(nyc.json.raw.data[['data']])
nyc.json.data.frame <- nyc.json.data.frame %>% select(cid = X3, agency = X9, dataset = X10, dataset_description = X11, update_frequency = X12, planned_release_date = X13, urlLink = X14)
nyc.json.data.frame$cid <- as.numeric(as.numeric(nyc.json.data.frame$cid))
nyc.json.data.frame$cid <- as.numeric(as.character(nyc.json.data.frame$cid))
nyc.json.data.frame <- nyc.json.data.frame[order(cid),]
nyc.json.data.frame
nyc.json.data.frame <- nyc.json.data.frame[order(cid),]
nyc.json.data.frame %>% filter(cid < 16) %>% arrange(cid) %>% select(cid, agency, dataset, dataset_description, update_frequency, planned_release_date, urlLink) %>%
kable(format="pandoc")
nyc.json.data.frame <- data.frame(nyc.json.raw.data[['data']])
nyc.json.data.frame <- nyc.json.data.frame %>% select(cid = X3, agency = X9, dataset = X10, dataset_description = X11, update_frequency = X12, planned_release_date = X13, urlLink = X14)
nyc.json.data.frame %>% filter(cid < 16) %>% arrange(cid,) %>% select(cid, agency, dataset, dataset_description, update_frequency, planned_release_date, urlLink) %>%
kable(format="pandoc")
nyc.json.data.frame %>% filter(cid < 16) %>% select(cid, agency, dataset, dataset_description, update_frequency, planned_release_date, urlLink) %>%
kable(format="pandoc")
nyc.json.data.frame <- data.frame(nyc.json.raw.data[['data']])
nyc.json.data.frame <- nyc.json.data.frame %>% select(cid = X1, agency = X9, dataset = X10, dataset_description = X11, update_frequency = X12, planned_release_date = X13, urlLink = X14)
nyc.json.data.frame$cid <- as.numeric(as.character(nyc.json.data.frame$cid))
nyc.json.data.frame %>% filter(cid < 16) %>% select(cid, agency, dataset, dataset_description, update_frequency, planned_release_date, urlLink) %>%
kable(format="pandoc")
rm(list = ls())
library(knitr)
library(dplyr)
library(rvest)
library(stringr)
library(jsonlite)
library(tibble)
nyc.xml.raw.data <- read_html("https://data.cityofnewyork.us/api/views/tyjc-nqc2/rows.xml")
nyc.xml.nodes <- nyc.xml.raw.data %>%
html_nodes(xpath = "//row//row")
nyc.xml.data.frame <- data.frame(
agency = nyc.xml.nodes %>%  html_node(xpath = "//agency") %>% html_text(),
dataset = nyc.xml.nodes %>%  html_node(xpath = "//dataset") %>% html_text(),
dataset_description = nyc.xml.nodes %>%  html_node(xpath = "//dataset_description") %>% html_text(),
update_frequency = nyc.xml.nodes %>%  html_node(xpath = "//update_frequency") %>% html_text(),
planned_release_date = nyc.xml.nodes %>%  html_node(xpath = "//planned_release_date") %>% html_text(),
cid = nyc.xml.nodes %>% html_attr("_id") %>% as.integer(),
stringsAsFactors = F
)
View(nyc.xml.data.frame)
nyc.xml.data.frame <- data.frame(
agency = nyc.xml.nodes %>%  html_nodes(xpath = "//agency") %>% html_text(),
dataset = nyc.xml.nodes %>%  html_nodes(xpath = "//dataset") %>% html_text(),
dataset_description = nyc.xml.nodes %>%  html_nodes(xpath = "//dataset_description") %>% html_text(),
update_frequency = nyc.xml.nodes %>%  html_nodes(xpath = "//update_frequency") %>% html_text(),
planned_release_date = nyc.xml.nodes %>%  html_nodes(xpath = "//planned_release_date") %>% html_text(),
cid = nyc.xml.nodes %>% html_attr("_id") %>% as.integer(),
stringsAsFactors = F
)
nyc.xml.data.frame <- data.frame(
agency = nyc.xml.nodes %>%  html_nodes(xpath = "//agency") %>% html_text(),
dataset = nyc.xml.nodes %>%  html_nodes(xpath = "//dataset") %>% html_text(),
dataset_description = nyc.xml.nodes %>%  html_nodes(xpath = "//dataset_description") %>% html_text(),
update_frequency = nyc.xml.nodes %>%  html_nodes(xpath = "//update_frequency") %>% html_text(),
planned_release_date = nyc.xml.nodes %>%  html_nodes(xpath = "//planned_release_date") %>% html_text(),
urlLink = nyc.xml.nodes %>%  html_nodes(xpath = "//link") %>% html_text(),
cid = nyc.xml.nodes %>% html_attr("_id") %>% as.integer(),
stringsAsFactors = F
)
jan09 <- read_html("https://www.paysa.com/jobs/data-scientist--t#!title=data%20scientist&skills=&page=4&limit=10&order=comp")
rm(list = ls())
rmarkdown::shiny_prerendered_clean('D:/Pavan/Test1.Rpres')
getwd()
setwd("D:/Pavan")
options(browser = as.vector(Sys.getenv("R_BROWSER")))
options
setwd("D:/CUNY/607/Project03")
install.packages("prettydoc")
install.packages("C:/Users/akula/AppData/Local/Temp/RtmpmuBoFG/downloaded_packages/prettydoc_0.2.0.zip", repos = NULL, type = "win.binary")
setwd("D:/CUNY/607/Presentation")
rmarkdown::shiny_prerendered_clean('Presentation-607.Rpres')
